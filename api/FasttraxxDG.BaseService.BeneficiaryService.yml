### YamlMime:ManagedReference
items:
- uid: FasttraxxDG.BaseService.BeneficiaryService
  commentId: T:FasttraxxDG.BaseService.BeneficiaryService
  id: BeneficiaryService
  parent: FasttraxxDG.BaseService
  children:
  - FasttraxxDG.BaseService.BeneficiaryService.#ctor(System.String)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists(System.Int32)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.String)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet(System.Int32)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch(System.String,System.String,System.Int32)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.String)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2(System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList(System.Int32)
  - FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary(System.Int32)
  - FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction(System.Int32,System.String)
  - FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList(System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: BeneficiaryService
  nameWithType: BeneficiaryService
  fullName: FasttraxxDG.BaseService.BeneficiaryService
  type: Class
  source:
    id: BeneficiaryService
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 9
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  syntax:
    content: 'public class BeneficiaryService : BaseDataAccess'
    content.vb: >-
      Public Class BeneficiaryService

          Inherits BaseDataAccess
  inheritance:
  - System.Object
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  inheritedMembers:
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{{T}})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FasttraxxDG.BaseService.BeneficiaryService.FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
  - System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FasttraxxDG.BaseService.BeneficiaryService.#ctor(System.String)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryService(String)
  nameWithType: BeneficiaryService.BeneficiaryService(String)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryService(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 15
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\ndefault constructor with <code data-dev-comment-type=\"paramref\" class=\"paramref\">connection</code>\n"
  example: []
  syntax:
    content: public BeneficiaryService(string connection)
    parameters:
    - id: connection
      type: System.String
      description: ''
    content.vb: Public Sub New(connection As String)
  overload: FasttraxxDG.BaseService.BeneficiaryService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.String)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.String)
  id: BeneficiaryAdd(System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.String,System.Nullable{System.DateTime},System.String)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryAdd(String, String, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, String, Nullable<DateTime>, String)
  nameWithType: BeneficiaryService.BeneficiaryAdd(String, String, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, String, Nullable<DateTime>, String)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd(System.String, System.String, System.String, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Int32, System.String, System.String, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    id: BeneficiaryAdd
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 44
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method insert bene data and return <xref href=\"FasttraxxDG.BaseModel.BeneficiaryData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BeneficiaryData BeneficiaryAdd(string firstname, string lastname, string middlename, string address1, string address2, int cityId, string mobile1, string mobile2, string remarks, string tel1, string tel2, string zip, int relationId, int remitterId, string gender, int creatorId, string alternate, string email, DateTime? birthdate, string occupation)
    parameters:
    - id: firstname
      type: System.String
      description: Required*
    - id: lastname
      type: System.String
      description: Required*
    - id: middlename
      type: System.String
      description: Required*
    - id: address1
      type: System.String
      description: Required*
    - id: address2
      type: System.String
      description: ''
    - id: cityId
      type: System.Int32
      description: Required*
    - id: mobile1
      type: System.String
      description: Required*
    - id: mobile2
      type: System.String
      description: ''
    - id: remarks
      type: System.String
      description: ''
    - id: tel1
      type: System.String
      description: ''
    - id: tel2
      type: System.String
      description: ''
    - id: zip
      type: System.String
      description: ''
    - id: relationId
      type: System.Int32
      description: Required*
    - id: remitterId
      type: System.Int32
      description: ''
    - id: gender
      type: System.String
      description: Required*
    - id: creatorId
      type: System.Int32
      description: ''
    - id: alternate
      type: System.String
      description: ''
    - id: email
      type: System.String
      description: ''
    - id: birthdate
      type: System.Nullable{System.DateTime}
      description: Required*
    - id: occupation
      type: System.String
      description: Required*
    return:
      type: FasttraxxDG.BaseModel.BeneficiaryData
      description: ''
    content.vb: Public Function BeneficiaryAdd(firstname As String, lastname As String, middlename As String, address1 As String, address2 As String, cityId As Integer, mobile1 As String, mobile2 As String, remarks As String, tel1 As String, tel2 As String, zip As String, relationId As Integer, remitterId As Integer, gender As String, creatorId As Integer, alternate As String, email As String, birthdate As Date?, occupation As String) As BeneficiaryData
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd*
  nameWithType.vb: BeneficiaryService.BeneficiaryAdd(String, String, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, String, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd(System.String, System.String, System.String, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Int32, System.String, System.String, System.Nullable(Of System.DateTime), System.String)
  name.vb: BeneficiaryAdd(String, String, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, String, Nullable(Of DateTime), String)
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.String)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.String)
  id: BeneficiaryUpdate(System.Int32,System.String,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.String,System.Int32,System.String,System.Nullable{System.DateTime},System.String)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryUpdate(Int32, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, Nullable<DateTime>, String)
  nameWithType: BeneficiaryService.BeneficiaryUpdate(Int32, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, Nullable<DateTime>, String)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate(System.Int32, System.String, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Int32, System.String, System.Nullable<System.DateTime>, System.String)
  type: Method
  source:
    id: BeneficiaryUpdate
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 126
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method update bene data and return <xref href=\"FasttraxxDG.BaseModel.BeneficiaryData\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public BeneficiaryData BeneficiaryUpdate(int beneficiaryId, string firstname, string lastname, string middlename, int cityId, string mobile1, string mobile2, string remarks, string tel1, string tel2, string zip, int relationId, int remitterId, string gender, int modifierId, string email, DateTime? birthdate, string occupation)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: Required*
    - id: firstname
      type: System.String
      description: Required*
    - id: lastname
      type: System.String
      description: Required*
    - id: middlename
      type: System.String
      description: Required*
    - id: cityId
      type: System.Int32
      description: Required*
    - id: mobile1
      type: System.String
      description: Required*
    - id: mobile2
      type: System.String
      description: ''
    - id: remarks
      type: System.String
      description: ''
    - id: tel1
      type: System.String
      description: ''
    - id: tel2
      type: System.String
      description: ''
    - id: zip
      type: System.String
      description: ''
    - id: relationId
      type: System.Int32
      description: Required*
    - id: remitterId
      type: System.Int32
      description: ''
    - id: gender
      type: System.String
      description: Required*
    - id: modifierId
      type: System.Int32
      description: Required*
    - id: email
      type: System.String
      description: ''
    - id: birthdate
      type: System.Nullable{System.DateTime}
      description: Required*
    - id: occupation
      type: System.String
      description: Required*
    return:
      type: FasttraxxDG.BaseModel.BeneficiaryData
      description: ''
    content.vb: Public Function BeneficiaryUpdate(beneficiaryId As Integer, firstname As String, lastname As String, middlename As String, cityId As Integer, mobile1 As String, mobile2 As String, remarks As String, tel1 As String, tel2 As String, zip As String, relationId As Integer, remitterId As Integer, gender As String, modifierId As Integer, email As String, birthdate As Date?, occupation As String) As BeneficiaryData
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate*
  nameWithType.vb: BeneficiaryService.BeneficiaryUpdate(Int32, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, Nullable(Of DateTime), String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate(System.Int32, System.String, System.String, System.String, System.Int32, System.String, System.String, System.String, System.String, System.String, System.String, System.Int32, System.Int32, System.String, System.Int32, System.String, System.Nullable(Of System.DateTime), System.String)
  name.vb: BeneficiaryUpdate(Int32, String, String, String, Int32, String, String, String, String, String, String, Int32, Int32, String, Int32, String, Nullable(Of DateTime), String)
- uid: FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList(System.Int32,System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList(System.Int32,System.Int32)
  id: RemitterBeneList(System.Int32,System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: RemitterBeneList(Int32, Int32)
  nameWithType: BeneficiaryService.RemitterBeneList(Int32, Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList(System.Int32, System.Int32)
  type: Method
  source:
    id: RemitterBeneList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 194
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches bene data filter by <code data-dev-comment-type=\"paramref\" class=\"paramref\">remitterId</code>\nand <code data-dev-comment-type=\"paramref\" class=\"paramref\">companyId</code> and return list of <xref href=\"FasttraxxDG.BaseModel.BeneficiaryData\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: public List<BeneficiaryData> RemitterBeneList(int remitterId, int companyId)
    parameters:
    - id: remitterId
      type: System.Int32
      description: ''
    - id: companyId
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.BeneficiaryData}
      description: ''
    content.vb: Public Function RemitterBeneList(remitterId As Integer, companyId As Integer) As List(Of BeneficiaryData)
  overload: FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList(System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList(System.Int32)
  id: BeneRecordList(System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneRecordList(Int32)
  nameWithType: BeneficiaryService.BeneRecordList(Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList(System.Int32)
  type: Method
  source:
    id: BeneRecordList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 208
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches beneficiary data filter by <code data-dev-comment-type=\"paramref\" class=\"paramref\">beneficiaryId</code>\nand return list of <xref href=\"FasttraxxDG.BaseModel.BeneficiaryData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<BeneficiaryData> BeneRecordList(int beneficiaryId)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.BeneficiaryData}
      description: ''
    content.vb: Public Function BeneRecordList(beneficiaryId As Integer) As List(Of BeneficiaryData)
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary(System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary(System.Int32)
  id: GetBeneficiary(System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: GetBeneficiary(Int32)
  nameWithType: BeneficiaryService.GetBeneficiary(Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary(System.Int32)
  type: Method
  source:
    id: GetBeneficiary
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 221
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\n/// this method get bene data filter by\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">beneficiaryId</code> and return <xref href=\"FasttraxxDG.BaseModel.BeneficiaryData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public BeneficiaryData GetBeneficiary(int beneficiaryId)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.BeneficiaryData
      description: ''
    content.vb: Public Function GetBeneficiary(beneficiaryId As Integer) As BeneficiaryData
  overload: FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet(System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet(System.Int32)
  id: BeneficiaryIsActiveGet(System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryIsActiveGet(Int32)
  nameWithType: BeneficiaryService.BeneficiaryIsActiveGet(Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet(System.Int32)
  type: Method
  source:
    id: BeneficiaryIsActiveGet
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 233
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if bene is already active by <code data-dev-comment-type=\"paramref\" class=\"paramref\">beneficiaryId</code> and return a boolean.\n"
  example: []
  syntax:
    content: public bool BeneficiaryIsActiveGet(int beneficiaryId)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function BeneficiaryIsActiveGet(beneficiaryId As Integer) As Boolean
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet
  id: BeneficiaryMobileFakeGet
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryMobileFakeGet()
  nameWithType: BeneficiaryService.BeneficiaryMobileFakeGet()
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet()
  type: Method
  source:
    id: BeneficiaryMobileFakeGet
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 244
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get fake mobile for bene and return a string.\n"
  example: []
  syntax:
    content: public string BeneficiaryMobileFakeGet()
    return:
      type: System.String
      description: ''
    content.vb: Public Function BeneficiaryMobileFakeGet As String
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2(System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2(System.Int32,System.Int32,System.String)
  id: BeneficiaryUpdateTelephone2(System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryUpdateTelephone2(Int32, Int32, String)
  nameWithType: BeneficiaryService.BeneficiaryUpdateTelephone2(Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2(System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: BeneficiaryUpdateTelephone2
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 259
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method update bene tel2 using <code data-dev-comment-type=\"paramref\" class=\"paramref\">beneId</code>\n, <code data-dev-comment-type=\"paramref\" class=\"paramref\">userId</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">tel2</code> and return a boolean.\n"
  example: []
  syntax:
    content: public bool BeneficiaryUpdateTelephone2(int beneId, int userId, string tel2)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: userId
      type: System.Int32
      description: Required*
    - id: tel2
      type: System.String
      description: Required*
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function BeneficiaryUpdateTelephone2(beneId As Integer, userId As Integer, tel2 As String) As Boolean
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists(System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists(System.Int32)
  id: BeneAccountExists(System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneAccountExists(Int32)
  nameWithType: BeneficiaryService.BeneAccountExists(Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists(System.Int32)
  type: Method
  source:
    id: BeneAccountExists
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 302
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if bene already exists in account records\nby <code data-dev-comment-type=\"paramref\" class=\"paramref\">beneficiaryId</code> and return a boolean.\n"
  example: []
  syntax:
    content: public bool BeneAccountExists(int beneficiaryId)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function BeneAccountExists(beneficiaryId As Integer) As Boolean
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction(System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction(System.Int32,System.String)
  id: Has14DaysTransaction(System.Int32,System.String)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: Has14DaysTransaction(Int32, String)
  nameWithType: BeneficiaryService.Has14DaysTransaction(Int32, String)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction(System.Int32, System.String)
  type: Method
  source:
    id: Has14DaysTransaction
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 316
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if bene has txns within 14 days using <code data-dev-comment-type=\"paramref\" class=\"paramref\">beneficiaryId</code>\nand <code data-dev-comment-type=\"paramref\" class=\"paramref\">acctNumber</code> and return a boolean.\n"
  example: []
  syntax:
    content: public bool Has14DaysTransaction(int beneficiaryId, string acctNumber)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    - id: acctNumber
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Has14DaysTransaction(beneficiaryId As Integer, acctNumber As String) As Boolean
  overload: FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch(System.String,System.String,System.Int32)
  commentId: M:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch(System.String,System.String,System.Int32)
  id: BeneficiaryNameSearch(System.String,System.String,System.Int32)
  parent: FasttraxxDG.BaseService.BeneficiaryService
  langs:
  - csharp
  - vb
  name: BeneficiaryNameSearch(String, String, Int32)
  nameWithType: BeneficiaryService.BeneficiaryNameSearch(String, String, Int32)
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch(System.String, System.String, System.Int32)
  type: Method
  source:
    id: BeneficiaryNameSearch
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\BeneficiaryService.cs
    startLine: 332
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches bene data using <code data-dev-comment-type=\"paramref\" class=\"paramref\">firstName</code>, <code data-dev-comment-type=\"paramref\" class=\"paramref\">lastName</code>\nand <code data-dev-comment-type=\"paramref\" class=\"paramref\">companyId</code> and return list of <see cref=\"!:BeneficiaryBl\"></see>.\n"
  example: []
  syntax:
    content: public List<BeneficiaryData> BeneficiaryNameSearch(string firstName, string lastName, int companyId)
    parameters:
    - id: firstName
      type: System.String
      description: ''
    - id: lastName
      type: System.String
      description: ''
    - id: companyId
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.BeneficiaryData}
      description: ''
    content.vb: Public Function BeneficiaryNameSearch(firstName As String, lastName As String, companyId As Integer) As List(Of BeneficiaryData)
  overload: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FasttraxxDG.BaseService
  commentId: N:FasttraxxDG.BaseService
  name: FasttraxxDG.BaseService
  nameWithType: FasttraxxDG.BaseService
  fullName: FasttraxxDG.BaseService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  commentId: T:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  parent: FasttraxxDG.BaseService.DataAccess.Repository
  name: BaseDataAccess
  nameWithType: BaseDataAccess
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  commentId: P:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  name: ConnectionString
  nameWithType: BaseDataAccess.ConnectionString
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  name: LoadList<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadList<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadList(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)(System.String, TU)
  name.vb: LoadList(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList<T, TU>
    nameWithType: BaseDataAccess.LoadList<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList(Of T, TU)
    nameWithType: BaseDataAccess.LoadList(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  name: LoadListQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)(System.String, TU)
  name.vb: LoadListQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry<T, TU>
    nameWithType: BaseDataAccess.LoadListQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry(Of T, TU)
    nameWithType: BaseDataAccess.LoadListQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  name: GetData<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetData<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetData(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)(System.String, TU)
  name.vb: GetData(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData<T, TU>
    nameWithType: BaseDataAccess.GetData<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData(Of T, TU)
    nameWithType: BaseDataAccess.GetData(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  name: GetDataQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)(System.String, TU)
  name.vb: GetDataQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry<T, TU>
    nameWithType: BaseDataAccess.GetDataQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  name: CrudBase<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBase<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBase(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)(System.String, TU)
  name.vb: CrudBase(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase<T, TU>
    nameWithType: BaseDataAccess.CrudBase<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase(Of T, TU)
    nameWithType: BaseDataAccess.CrudBase(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  name: CrudBaseQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)(System.String, TU)
  name.vb: CrudBaseQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry<T, TU>
    nameWithType: BaseDataAccess.CrudBaseQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  name: Execute<TU>(String, TU)
  nameWithType: BaseDataAccess.Execute<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.Execute(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)(System.String, TU)
  name.vb: Execute(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute<TU>
    nameWithType: BaseDataAccess.Execute<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute(Of TU)
    nameWithType: BaseDataAccess.Execute(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  name: ExecuteQry<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteQry<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteQry(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)(System.String, TU)
  name.vb: ExecuteQry(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry<TU>
    nameWithType: BaseDataAccess.ExecuteQry<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry(Of TU)
    nameWithType: BaseDataAccess.ExecuteQry(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  name: GetDataAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)(System.String, TU)
  name.vb: GetDataAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync<T, TU>
    nameWithType: BaseDataAccess.GetDataAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync(Of T, TU)
    nameWithType: BaseDataAccess.GetDataAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  name: LoadListAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)(System.String, TU)
  name.vb: LoadListAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync<T, TU>
    nameWithType: BaseDataAccess.LoadListAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync(Of T, TU)
    nameWithType: BaseDataAccess.LoadListAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  name: CrudBaseAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)(System.String, TU)
  name.vb: CrudBaseAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync<T, TU>
    nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  name: ExecuteAsync<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteAsync<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteAsync(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)(System.String, TU)
  name.vb: ExecuteAsync(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync<TU>
    nameWithType: BaseDataAccess.ExecuteAsync<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync(Of TU)
    nameWithType: BaseDataAccess.ExecuteAsync(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  isExternal: true
  name: ExecuteReturnScalarAsync<T>(String, DynamicParameters)
  nameWithType: BaseDataAccess.ExecuteReturnScalarAsync<T>(String, DynamicParameters)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync<T>(System.String, Dapper.DynamicParameters)
  nameWithType.vb: BaseDataAccess.ExecuteReturnScalarAsync(Of T)(String, DynamicParameters)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync(Of T)(System.String, Dapper.DynamicParameters)
  name.vb: ExecuteReturnScalarAsync(Of T)(String, DynamicParameters)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
    name: ExecuteReturnScalarAsync<T>
    nameWithType: BaseDataAccess.ExecuteReturnScalarAsync<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dapper.DynamicParameters
    name: DynamicParameters
    nameWithType: DynamicParameters
    fullName: Dapper.DynamicParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
    name: ExecuteReturnScalarAsync(Of T)
    nameWithType: BaseDataAccess.ExecuteReturnScalarAsync(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dapper.DynamicParameters
    name: DynamicParameters
    nameWithType: DynamicParameters
    fullName: Dapper.DynamicParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  name: GetDataType<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataType<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataType(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)(System.String, TU)
  name.vb: GetDataType(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType<T, TU>
    nameWithType: BaseDataAccess.GetDataType<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType(Of T, TU)
    nameWithType: BaseDataAccess.GetDataType(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  name: GetDataTypeQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataTypeQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)(System.String, TU)
  name.vb: GetDataTypeQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry<T, TU>
    nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataTypeQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  name: ExecuteUdt<T, TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteUdt<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteUdt(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)(System.String, TU)
  name.vb: ExecuteUdt(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt<T, TU>
    nameWithType: BaseDataAccess.ExecuteUdt<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt(Of T, TU)
    nameWithType: BaseDataAccess.ExecuteUdt(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{{T}})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  name: ToDataTable<T>(List<T>)
  nameWithType: BaseDataAccess.ToDataTable<T>(List<T>)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: BaseDataAccess.ToDataTable(Of T)(List(Of T))
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)(System.Collections.Generic.List(Of T))
  name.vb: ToDataTable(Of T)(List(Of T))
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable<T>
    nameWithType: BaseDataAccess.ToDataTable<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable(Of T)
    nameWithType: BaseDataAccess.ToDataTable(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  name: TestConnection()
  nameWithType: BaseDataAccess.TestConnection()
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection()
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
    name: TestConnection
    nameWithType: BaseDataAccess.TestConnection
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
    name: TestConnection
    nameWithType: BaseDataAccess.TestConnection
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.BeneficiaryService.FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
  commentId: M:FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  parent: FasttraxxDG.BaseLogic.MapperHelper
  definition: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  name: MapTo<BeneficiaryService, TDest>()
  nameWithType: MapperHelper.MapTo<BeneficiaryService, TDest>()
  fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<FasttraxxDG.BaseService.BeneficiaryService, TDest>()
  nameWithType.vb: MapperHelper.MapTo(Of BeneficiaryService, TDest)()
  fullName.vb: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of FasttraxxDG.BaseService.BeneficiaryService, TDest)()
  name.vb: MapTo(Of BeneficiaryService, TDest)()
  spec.csharp:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
    name: MapTo<BeneficiaryService, TDest>
    nameWithType: MapperHelper.MapTo<BeneficiaryService, TDest>
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<FasttraxxDG.BaseService.BeneficiaryService, TDest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
    name: MapTo(Of BeneficiaryService, TDest)
    nameWithType: MapperHelper.MapTo(Of BeneficiaryService, TDest)
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of FasttraxxDG.BaseService.BeneficiaryService, TDest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  parent: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  definition: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  name: RightDrawerShow()
  nameWithType: AppSettings.RightDrawerShow()
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow()
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  parent: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  definition: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  name: LeftDrawerShow()
  nameWithType: AppSettings.LeftDrawerShow()
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow()
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FasttraxxDG.BaseService.DataAccess.Repository
  commentId: N:FasttraxxDG.BaseService.DataAccess.Repository
  name: FasttraxxDG.BaseService.DataAccess.Repository
  nameWithType: FasttraxxDG.BaseService.DataAccess.Repository
  fullName: FasttraxxDG.BaseService.DataAccess.Repository
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  isExternal: true
  name: LoadList<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadList<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadList(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)(System.String, TU)
  name.vb: LoadList(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList<T, TU>
    nameWithType: BaseDataAccess.LoadList<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList(Of T, TU)
    nameWithType: BaseDataAccess.LoadList(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  isExternal: true
  name: LoadListQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)(System.String, TU)
  name.vb: LoadListQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry<T, TU>
    nameWithType: BaseDataAccess.LoadListQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry(Of T, TU)
    nameWithType: BaseDataAccess.LoadListQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  isExternal: true
  name: GetData<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetData<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetData(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)(System.String, TU)
  name.vb: GetData(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData<T, TU>
    nameWithType: BaseDataAccess.GetData<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData(Of T, TU)
    nameWithType: BaseDataAccess.GetData(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  isExternal: true
  name: GetDataQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)(System.String, TU)
  name.vb: GetDataQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry<T, TU>
    nameWithType: BaseDataAccess.GetDataQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  isExternal: true
  name: CrudBase<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBase<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBase(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)(System.String, TU)
  name.vb: CrudBase(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase<T, TU>
    nameWithType: BaseDataAccess.CrudBase<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase(Of T, TU)
    nameWithType: BaseDataAccess.CrudBase(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  isExternal: true
  name: CrudBaseQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)(System.String, TU)
  name.vb: CrudBaseQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry<T, TU>
    nameWithType: BaseDataAccess.CrudBaseQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  isExternal: true
  name: Execute<TU>(String, TU)
  nameWithType: BaseDataAccess.Execute<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.Execute(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)(System.String, TU)
  name.vb: Execute(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute<TU>
    nameWithType: BaseDataAccess.Execute<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute(Of TU)
    nameWithType: BaseDataAccess.Execute(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  isExternal: true
  name: ExecuteQry<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteQry<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteQry(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)(System.String, TU)
  name.vb: ExecuteQry(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry<TU>
    nameWithType: BaseDataAccess.ExecuteQry<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry(Of TU)
    nameWithType: BaseDataAccess.ExecuteQry(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  isExternal: true
  name: GetDataAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)(System.String, TU)
  name.vb: GetDataAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync<T, TU>
    nameWithType: BaseDataAccess.GetDataAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync(Of T, TU)
    nameWithType: BaseDataAccess.GetDataAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  isExternal: true
  name: LoadListAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)(System.String, TU)
  name.vb: LoadListAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync<T, TU>
    nameWithType: BaseDataAccess.LoadListAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync(Of T, TU)
    nameWithType: BaseDataAccess.LoadListAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  isExternal: true
  name: CrudBaseAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)(System.String, TU)
  name.vb: CrudBaseAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync<T, TU>
    nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  isExternal: true
  name: ExecuteAsync<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteAsync<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteAsync(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)(System.String, TU)
  name.vb: ExecuteAsync(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync<TU>
    nameWithType: BaseDataAccess.ExecuteAsync<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync(Of TU)
    nameWithType: BaseDataAccess.ExecuteAsync(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  isExternal: true
  name: GetDataType<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataType<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataType(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)(System.String, TU)
  name.vb: GetDataType(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType<T, TU>
    nameWithType: BaseDataAccess.GetDataType<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType(Of T, TU)
    nameWithType: BaseDataAccess.GetDataType(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  isExternal: true
  name: GetDataTypeQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataTypeQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)(System.String, TU)
  name.vb: GetDataTypeQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry<T, TU>
    nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataTypeQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  isExternal: true
  name: ExecuteUdt<T, TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteUdt<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteUdt(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)(System.String, TU)
  name.vb: ExecuteUdt(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt<T, TU>
    nameWithType: BaseDataAccess.ExecuteUdt<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt(Of T, TU)
    nameWithType: BaseDataAccess.ExecuteUdt(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: ToDataTable<T>(List<T>)
  nameWithType: BaseDataAccess.ToDataTable<T>(List<T>)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: BaseDataAccess.ToDataTable(Of T)(List(Of T))
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)(System.Collections.Generic.List(Of T))
  name.vb: ToDataTable(Of T)(List(Of T))
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable<T>
    nameWithType: BaseDataAccess.ToDataTable<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable(Of T)
    nameWithType: BaseDataAccess.ToDataTable(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  commentId: M:FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  name: MapTo<TSource, TDest>(TSource)
  nameWithType: MapperHelper.MapTo<TSource, TDest>(TSource)
  fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<TSource, TDest>(TSource)
  nameWithType.vb: MapperHelper.MapTo(Of TSource, TDest)(TSource)
  fullName.vb: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of TSource, TDest)(TSource)
  name.vb: MapTo(Of TSource, TDest)(TSource)
  spec.csharp:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
    name: MapTo<TSource, TDest>
    nameWithType: MapperHelper.MapTo<TSource, TDest>
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<TSource, TDest>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
    name: MapTo(Of TSource, TDest)
    nameWithType: MapperHelper.MapTo(Of TSource, TDest)
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of TSource, TDest)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic.MapperHelper
  commentId: T:FasttraxxDG.BaseLogic.MapperHelper
  parent: FasttraxxDG.BaseLogic
  name: MapperHelper
  nameWithType: MapperHelper
  fullName: FasttraxxDG.BaseLogic.MapperHelper
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  isExternal: true
  name: RightDrawerShow(Object)
  nameWithType: AppSettings.RightDrawerShow(Object)
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  commentId: T:FasttraxxDG.FrontEndUI.Helpers.AppSettings
  parent: FasttraxxDG.FrontEndUI.Helpers
  name: AppSettings
  nameWithType: AppSettings
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  isExternal: true
  name: LeftDrawerShow(Object)
  nameWithType: AppSettings.LeftDrawerShow(Object)
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic
  commentId: N:FasttraxxDG.BaseLogic
  name: FasttraxxDG.BaseLogic
  nameWithType: FasttraxxDG.BaseLogic
  fullName: FasttraxxDG.BaseLogic
- uid: FasttraxxDG.FrontEndUI.Helpers
  commentId: N:FasttraxxDG.FrontEndUI.Helpers
  name: FasttraxxDG.FrontEndUI.Helpers
  nameWithType: FasttraxxDG.FrontEndUI.Helpers
  fullName: FasttraxxDG.FrontEndUI.Helpers
- uid: FasttraxxDG.BaseService.BeneficiaryService.#ctor*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.#ctor
  name: BeneficiaryService
  nameWithType: BeneficiaryService.BeneficiaryService
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FasttraxxDG.BaseModel.BeneficiaryData
  commentId: T:FasttraxxDG.BaseModel.BeneficiaryData
  parent: FasttraxxDG.BaseModel
  name: BeneficiaryData
  nameWithType: BeneficiaryData
  fullName: FasttraxxDG.BaseModel.BeneficiaryData
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd
  name: BeneficiaryAdd
  nameWithType: BeneficiaryService.BeneficiaryAdd
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryAdd
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseModel
  commentId: N:FasttraxxDG.BaseModel
  name: FasttraxxDG.BaseModel
  nameWithType: FasttraxxDG.BaseModel
  fullName: FasttraxxDG.BaseModel
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate
  name: BeneficiaryUpdate
  nameWithType: BeneficiaryService.BeneficiaryUpdate
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdate
- uid: FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList
  name: RemitterBeneList
  nameWithType: BeneficiaryService.RemitterBeneList
  fullName: FasttraxxDG.BaseService.BeneficiaryService.RemitterBeneList
- uid: System.Collections.Generic.List{FasttraxxDG.BaseModel.BeneficiaryData}
  commentId: T:System.Collections.Generic.List{FasttraxxDG.BaseModel.BeneficiaryData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BeneficiaryData>
  nameWithType: List<BeneficiaryData>
  fullName: System.Collections.Generic.List<FasttraxxDG.BaseModel.BeneficiaryData>
  nameWithType.vb: List(Of BeneficiaryData)
  fullName.vb: System.Collections.Generic.List(Of FasttraxxDG.BaseModel.BeneficiaryData)
  name.vb: List(Of BeneficiaryData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FasttraxxDG.BaseModel.BeneficiaryData
    name: BeneficiaryData
    nameWithType: BeneficiaryData
    fullName: FasttraxxDG.BaseModel.BeneficiaryData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FasttraxxDG.BaseModel.BeneficiaryData
    name: BeneficiaryData
    nameWithType: BeneficiaryData
    fullName: FasttraxxDG.BaseModel.BeneficiaryData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList
  name: BeneRecordList
  nameWithType: BeneficiaryService.BeneRecordList
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneRecordList
- uid: FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary
  name: GetBeneficiary
  nameWithType: BeneficiaryService.GetBeneficiary
  fullName: FasttraxxDG.BaseService.BeneficiaryService.GetBeneficiary
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet
  name: BeneficiaryIsActiveGet
  nameWithType: BeneficiaryService.BeneficiaryIsActiveGet
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryIsActiveGet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet
  name: BeneficiaryMobileFakeGet
  nameWithType: BeneficiaryService.BeneficiaryMobileFakeGet
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryMobileFakeGet
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2
  name: BeneficiaryUpdateTelephone2
  nameWithType: BeneficiaryService.BeneficiaryUpdateTelephone2
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryUpdateTelephone2
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists
  name: BeneAccountExists
  nameWithType: BeneficiaryService.BeneAccountExists
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneAccountExists
- uid: FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction
  name: Has14DaysTransaction
  nameWithType: BeneficiaryService.Has14DaysTransaction
  fullName: FasttraxxDG.BaseService.BeneficiaryService.Has14DaysTransaction
- uid: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch*
  commentId: Overload:FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch
  name: BeneficiaryNameSearch
  nameWithType: BeneficiaryService.BeneficiaryNameSearch
  fullName: FasttraxxDG.BaseService.BeneficiaryService.BeneficiaryNameSearch
