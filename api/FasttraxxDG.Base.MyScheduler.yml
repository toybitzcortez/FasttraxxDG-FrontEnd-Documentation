### YamlMime:ManagedReference
items:
- uid: FasttraxxDG.Base.MyScheduler
  commentId: T:FasttraxxDG.Base.MyScheduler
  id: MyScheduler
  parent: FasttraxxDG.Base
  children:
  - FasttraxxDG.Base.MyScheduler.IntervalInDays(System.Int32,System.Int32,System.Double,System.Action)
  - FasttraxxDG.Base.MyScheduler.IntervalInHours(System.Int32,System.Int32,System.Double,System.Action)
  - FasttraxxDG.Base.MyScheduler.IntervalInMinutes(System.Int32,System.Int32,System.Double,System.Action)
  - FasttraxxDG.Base.MyScheduler.IntervalInSeconds(System.Int32,System.Int32,System.Double,System.Action)
  langs:
  - csharp
  - vb
  name: MyScheduler
  nameWithType: MyScheduler
  fullName: FasttraxxDG.Base.MyScheduler
  type: Class
  source:
    id: MyScheduler
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.Base\MyScheduler.cs
    startLine: 4
  assemblies:
  - FasttraxxDG.Base
  namespace: FasttraxxDG.Base
  syntax:
    content: public static class MyScheduler
    content.vb: Public Module MyScheduler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FasttraxxDG.Base.MyScheduler.IntervalInSeconds(System.Int32,System.Int32,System.Double,System.Action)
  commentId: M:FasttraxxDG.Base.MyScheduler.IntervalInSeconds(System.Int32,System.Int32,System.Double,System.Action)
  id: IntervalInSeconds(System.Int32,System.Int32,System.Double,System.Action)
  parent: FasttraxxDG.Base.MyScheduler
  langs:
  - csharp
  - vb
  name: IntervalInSeconds(Int32, Int32, Double, Action)
  nameWithType: MyScheduler.IntervalInSeconds(Int32, Int32, Double, Action)
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInSeconds(System.Int32, System.Int32, System.Double, System.Action)
  type: Method
  source:
    id: IntervalInSeconds
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.Base\MyScheduler.cs
    startLine: 6
  assemblies:
  - FasttraxxDG.Base
  namespace: FasttraxxDG.Base
  syntax:
    content: public static void IntervalInSeconds(int hour, int min, double interval, Action task)
    parameters:
    - id: hour
      type: System.Int32
    - id: min
      type: System.Int32
    - id: interval
      type: System.Double
    - id: task
      type: System.Action
    content.vb: Public Shared Sub IntervalInSeconds(hour As Integer, min As Integer, interval As Double, task As Action)
  overload: FasttraxxDG.Base.MyScheduler.IntervalInSeconds*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FasttraxxDG.Base.MyScheduler.IntervalInMinutes(System.Int32,System.Int32,System.Double,System.Action)
  commentId: M:FasttraxxDG.Base.MyScheduler.IntervalInMinutes(System.Int32,System.Int32,System.Double,System.Action)
  id: IntervalInMinutes(System.Int32,System.Int32,System.Double,System.Action)
  parent: FasttraxxDG.Base.MyScheduler
  langs:
  - csharp
  - vb
  name: IntervalInMinutes(Int32, Int32, Double, Action)
  nameWithType: MyScheduler.IntervalInMinutes(Int32, Int32, Double, Action)
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInMinutes(System.Int32, System.Int32, System.Double, System.Action)
  type: Method
  source:
    id: IntervalInMinutes
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.Base\MyScheduler.cs
    startLine: 11
  assemblies:
  - FasttraxxDG.Base
  namespace: FasttraxxDG.Base
  syntax:
    content: public static void IntervalInMinutes(int hour, int min, double interval, Action task)
    parameters:
    - id: hour
      type: System.Int32
    - id: min
      type: System.Int32
    - id: interval
      type: System.Double
    - id: task
      type: System.Action
    content.vb: Public Shared Sub IntervalInMinutes(hour As Integer, min As Integer, interval As Double, task As Action)
  overload: FasttraxxDG.Base.MyScheduler.IntervalInMinutes*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FasttraxxDG.Base.MyScheduler.IntervalInHours(System.Int32,System.Int32,System.Double,System.Action)
  commentId: M:FasttraxxDG.Base.MyScheduler.IntervalInHours(System.Int32,System.Int32,System.Double,System.Action)
  id: IntervalInHours(System.Int32,System.Int32,System.Double,System.Action)
  parent: FasttraxxDG.Base.MyScheduler
  langs:
  - csharp
  - vb
  name: IntervalInHours(Int32, Int32, Double, Action)
  nameWithType: MyScheduler.IntervalInHours(Int32, Int32, Double, Action)
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInHours(System.Int32, System.Int32, System.Double, System.Action)
  type: Method
  source:
    id: IntervalInHours
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.Base\MyScheduler.cs
    startLine: 16
  assemblies:
  - FasttraxxDG.Base
  namespace: FasttraxxDG.Base
  syntax:
    content: public static void IntervalInHours(int hour, int min, double interval, Action task)
    parameters:
    - id: hour
      type: System.Int32
    - id: min
      type: System.Int32
    - id: interval
      type: System.Double
    - id: task
      type: System.Action
    content.vb: Public Shared Sub IntervalInHours(hour As Integer, min As Integer, interval As Double, task As Action)
  overload: FasttraxxDG.Base.MyScheduler.IntervalInHours*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: FasttraxxDG.Base.MyScheduler.IntervalInDays(System.Int32,System.Int32,System.Double,System.Action)
  commentId: M:FasttraxxDG.Base.MyScheduler.IntervalInDays(System.Int32,System.Int32,System.Double,System.Action)
  id: IntervalInDays(System.Int32,System.Int32,System.Double,System.Action)
  parent: FasttraxxDG.Base.MyScheduler
  langs:
  - csharp
  - vb
  name: IntervalInDays(Int32, Int32, Double, Action)
  nameWithType: MyScheduler.IntervalInDays(Int32, Int32, Double, Action)
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInDays(System.Int32, System.Int32, System.Double, System.Action)
  type: Method
  source:
    id: IntervalInDays
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.Base\MyScheduler.cs
    startLine: 20
  assemblies:
  - FasttraxxDG.Base
  namespace: FasttraxxDG.Base
  syntax:
    content: public static void IntervalInDays(int hour, int min, double interval, Action task)
    parameters:
    - id: hour
      type: System.Int32
    - id: min
      type: System.Int32
    - id: interval
      type: System.Double
    - id: task
      type: System.Action
    content.vb: Public Shared Sub IntervalInDays(hour As Integer, min As Integer, interval As Double, task As Action)
  overload: FasttraxxDG.Base.MyScheduler.IntervalInDays*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: FasttraxxDG.Base
  commentId: N:FasttraxxDG.Base
  name: FasttraxxDG.Base
  nameWithType: FasttraxxDG.Base
  fullName: FasttraxxDG.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FasttraxxDG.Base.MyScheduler.IntervalInSeconds*
  commentId: Overload:FasttraxxDG.Base.MyScheduler.IntervalInSeconds
  name: IntervalInSeconds
  nameWithType: MyScheduler.IntervalInSeconds
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInSeconds
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: FasttraxxDG.Base.MyScheduler.IntervalInMinutes*
  commentId: Overload:FasttraxxDG.Base.MyScheduler.IntervalInMinutes
  name: IntervalInMinutes
  nameWithType: MyScheduler.IntervalInMinutes
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInMinutes
- uid: FasttraxxDG.Base.MyScheduler.IntervalInHours*
  commentId: Overload:FasttraxxDG.Base.MyScheduler.IntervalInHours
  name: IntervalInHours
  nameWithType: MyScheduler.IntervalInHours
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInHours
- uid: FasttraxxDG.Base.MyScheduler.IntervalInDays*
  commentId: Overload:FasttraxxDG.Base.MyScheduler.IntervalInDays
  name: IntervalInDays
  nameWithType: MyScheduler.IntervalInDays
  fullName: FasttraxxDG.Base.MyScheduler.IntervalInDays
