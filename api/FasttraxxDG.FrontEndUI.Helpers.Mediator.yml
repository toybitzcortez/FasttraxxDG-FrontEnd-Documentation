### YamlMime:ManagedReference
items:
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator
  commentId: T:FasttraxxDG.FrontEndUI.Helpers.Mediator
  id: Mediator
  parent: FasttraxxDG.FrontEndUI.Helpers
  children:
  - FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify(System.String,System.Object)
  - FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe(System.String,System.Action{System.Object})
  - FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe(System.String,System.Action{System.Object})
  langs:
  - csharp
  - vb
  name: Mediator
  nameWithType: Mediator
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator
  type: Class
  source:
    id: Mediator
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.FrontEndUI\FasttraxxDG.FrontEndUI\Helpers\Mediator.cs
    startLine: 5
  assemblies:
  - FasttraxxDG.FrontEndUI
  namespace: FasttraxxDG.FrontEndUI.Helpers
  syntax:
    content: public static class Mediator
    content.vb: Public Module Mediator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe(System.String,System.Action{System.Object})
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe(System.String,System.Action{System.Object})
  id: Subscribe(System.String,System.Action{System.Object})
  parent: FasttraxxDG.FrontEndUI.Helpers.Mediator
  langs:
  - csharp
  - vb
  name: Subscribe(String, Action<Object>)
  nameWithType: Mediator.Subscribe(String, Action<Object>)
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe(System.String, System.Action<System.Object>)
  type: Method
  source:
    id: Subscribe
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.FrontEndUI\FasttraxxDG.FrontEndUI\Helpers\Mediator.cs
    startLine: 10
  assemblies:
  - FasttraxxDG.FrontEndUI
  namespace: FasttraxxDG.FrontEndUI.Helpers
  syntax:
    content: public static void Subscribe(string token, Action<object> callback)
    parameters:
    - id: token
      type: System.String
    - id: callback
      type: System.Action{System.Object}
    content.vb: Public Shared Sub Subscribe(token As String, callback As Action(Of Object))
  overload: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe*
  nameWithType.vb: Mediator.Subscribe(String, Action(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe(System.String, System.Action(Of System.Object))
  name.vb: Subscribe(String, Action(Of Object))
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe(System.String,System.Action{System.Object})
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe(System.String,System.Action{System.Object})
  id: Unsubscribe(System.String,System.Action{System.Object})
  parent: FasttraxxDG.FrontEndUI.Helpers.Mediator
  langs:
  - csharp
  - vb
  name: Unsubscribe(String, Action<Object>)
  nameWithType: Mediator.Unsubscribe(String, Action<Object>)
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe(System.String, System.Action<System.Object>)
  type: Method
  source:
    id: Unsubscribe
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.FrontEndUI\FasttraxxDG.FrontEndUI\Helpers\Mediator.cs
    startLine: 28
  assemblies:
  - FasttraxxDG.FrontEndUI
  namespace: FasttraxxDG.FrontEndUI.Helpers
  syntax:
    content: public static void Unsubscribe(string token, Action<object> callback)
    parameters:
    - id: token
      type: System.String
    - id: callback
      type: System.Action{System.Object}
    content.vb: Public Shared Sub Unsubscribe(token As String, callback As Action(Of Object))
  overload: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe*
  nameWithType.vb: Mediator.Unsubscribe(String, Action(Of Object))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe(System.String, System.Action(Of System.Object))
  name.vb: Unsubscribe(String, Action(Of Object))
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify(System.String,System.Object)
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify(System.String,System.Object)
  id: Notify(System.String,System.Object)
  parent: FasttraxxDG.FrontEndUI.Helpers.Mediator
  langs:
  - csharp
  - vb
  name: Notify(String, Object)
  nameWithType: Mediator.Notify(String, Object)
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify(System.String, System.Object)
  type: Method
  source:
    id: Notify
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.FrontEndUI\FasttraxxDG.FrontEndUI\Helpers\Mediator.cs
    startLine: 34
  assemblies:
  - FasttraxxDG.FrontEndUI
  namespace: FasttraxxDG.FrontEndUI.Helpers
  syntax:
    content: public static void Notify(string token, object args = null)
    parameters:
    - id: token
      type: System.String
    - id: args
      type: System.Object
    content.vb: Public Shared Sub Notify(token As String, args As Object = Nothing)
  overload: FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: FasttraxxDG.FrontEndUI.Helpers
  commentId: N:FasttraxxDG.FrontEndUI.Helpers
  name: FasttraxxDG.FrontEndUI.Helpers
  nameWithType: FasttraxxDG.FrontEndUI.Helpers
  fullName: FasttraxxDG.FrontEndUI.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe*
  commentId: Overload:FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe
  name: Subscribe
  nameWithType: Mediator.Subscribe
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Subscribe
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action{System.Object}
  commentId: T:System.Action{System.Object}
  parent: System
  definition: System.Action`1
  name: Action<Object>
  nameWithType: Action<Object>
  fullName: System.Action<System.Object>
  nameWithType.vb: Action(Of Object)
  fullName.vb: System.Action(Of System.Object)
  name.vb: Action(Of Object)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe*
  commentId: Overload:FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe
  name: Unsubscribe
  nameWithType: Mediator.Unsubscribe
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Unsubscribe
- uid: FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify*
  commentId: Overload:FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify
  name: Notify
  nameWithType: Mediator.Notify
  fullName: FasttraxxDG.FrontEndUI.Helpers.Mediator.Notify
