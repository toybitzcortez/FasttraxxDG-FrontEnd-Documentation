### YamlMime:ManagedReference
items:
- uid: FasttraxxDG.BaseService.AccountService
  commentId: T:FasttraxxDG.BaseService.AccountService
  id: AccountService
  parent: FasttraxxDG.BaseService
  children:
  - FasttraxxDG.BaseService.AccountService.#ctor(System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddBb(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddBBCheck(System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddCc(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddCcCheck(System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddDd(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddDDCheck(System.Int32,System.Int32,System.Int32,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddFood(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddFsCheck(System.Int32,System.Int32,System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountAddPickup(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)
  - FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck(System.Int32,System.Int32,System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountGetBB(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountGetCC(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountGetDD(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountGetFS(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountGetPickup(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet(System.Int32)
  - FasttraxxDG.BaseService.AccountService.AccountTypeList
  - FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList(System.Int32)
  - FasttraxxDG.BaseService.AccountService.RestaurantList
  - FasttraxxDG.BaseService.AccountService.ServiceList(System.Int32)
  langs:
  - csharp
  - vb
  name: AccountService
  nameWithType: AccountService
  fullName: FasttraxxDG.BaseService.AccountService
  type: Class
  source:
    id: AccountService
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 10
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  syntax:
    content: 'public class AccountService : BaseDataAccess'
    content.vb: >-
      Public Class AccountService

          Inherits BaseDataAccess
  inheritance:
  - System.Object
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  inheritedMembers:
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,{TU})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{{T}})
  - FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - FasttraxxDG.BaseService.AccountService.FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
  - System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: FasttraxxDG.BaseService.AccountService.#ctor(System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountService(String)
  nameWithType: AccountService.AccountService(String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountService(System.String)
  type: Constructor
  source:
    id: .ctor
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 12
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  syntax:
    content: public AccountService(string connection)
    parameters:
    - id: connection
      type: System.String
    content.vb: Public Sub New(connection As String)
  overload: FasttraxxDG.BaseService.AccountService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList(System.Int32)
  id: BeneficiaryAccountList(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: BeneficiaryAccountList(Int32)
  nameWithType: AccountService.BeneficiaryAccountList(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList(System.Int32)
  type: Method
  source:
    id: BeneficiaryAccountList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 22
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches beneficiary account data and return list of <xref href=\"FasttraxxDG.BaseModel.AccountSelect\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<AccountSelect> BeneficiaryAccountList(int beneficiaryId)
    parameters:
    - id: beneficiaryId
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.AccountSelect}
      description: The List of Beneficiary Accounts
    content.vb: Public Function BeneficiaryAccountList(beneficiaryId As Integer) As List(Of AccountSelect)
  overload: FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountTypeList
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountTypeList
  id: AccountTypeList
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountTypeList()
  nameWithType: AccountService.AccountTypeList()
  fullName: FasttraxxDG.BaseService.AccountService.AccountTypeList()
  type: Method
  source:
    id: AccountTypeList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 33
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches all beneficiary accounts and return list of <xref href=\"FasttraxxDG.BaseModel.AccountSelect\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<AccountSelect> AccountTypeList()
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.AccountSelect}
      description: List of Accounts
    content.vb: Public Function AccountTypeList As List(Of AccountSelect)
  overload: FasttraxxDG.BaseService.AccountService.AccountTypeList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.ServiceList(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.ServiceList(System.Int32)
  id: ServiceList(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: ServiceList(Int32)
  nameWithType: AccountService.ServiceList(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.ServiceList(System.Int32)
  type: Method
  source:
    id: ServiceList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 44
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches all service data filter by accounttypeid and return list of <xref href=\"FasttraxxDG.BaseModel.ServiceData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public List<ServiceData> ServiceList(int accountTypeId)
    parameters:
    - id: accountTypeId
      type: System.Int32
      description: ''
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.ServiceData}
      description: List of Services
    content.vb: Public Function ServiceList(accountTypeId As Integer) As List(Of ServiceData)
  overload: FasttraxxDG.BaseService.AccountService.ServiceList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.RestaurantList
  commentId: M:FasttraxxDG.BaseService.AccountService.RestaurantList
  id: RestaurantList
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: RestaurantList()
  nameWithType: AccountService.RestaurantList()
  fullName: FasttraxxDG.BaseService.AccountService.RestaurantList()
  type: Method
  source:
    id: RestaurantList
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 54
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method fetches restaurant data and return list of <xref href=\"FasttraxxDG.BaseModel.Restaurant\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public List<Restaurant> RestaurantList()
    return:
      type: System.Collections.Generic.List{FasttraxxDG.BaseModel.Restaurant}
      description: List of Restaurants
    content.vb: Public Function RestaurantList As List(Of Restaurant)
  overload: FasttraxxDG.BaseService.AccountService.RestaurantList*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddBBCheck(System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddBBCheck(System.Int32,System.Int32,System.String)
  id: AccountAddBBCheck(System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddBBCheck(Int32, Int32, String)
  nameWithType: AccountService.AccountAddBBCheck(Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddBBCheck(System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: AccountAddBBCheck
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 67
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if account bb already exist in beneficiary records and return boolean.\n"
  example: []
  syntax:
    content: public bool AccountAddBBCheck(int beneId, int bankId, string accountNumber)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: bankId
      type: System.Int32
      description: Required*
    - id: accountNumber
      type: System.String
      description: Required*
    return:
      type: System.Boolean
      description: boolean
    content.vb: Public Function AccountAddBBCheck(beneId As Integer, bankId As Integer, accountNumber As String) As Boolean
  overload: FasttraxxDG.BaseService.AccountService.AccountAddBBCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddBb(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddBb(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: AccountAddBb(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddBb(String, String, String, Int32, Int32, Int32, Int32, String)
  nameWithType: AccountService.AccountAddBb(String, String, String, Int32, Int32, Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddBb(System.String, System.String, System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: AccountAddBb
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 87
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method insert account bb data and return entity model of <xref href=\"FasttraxxDG.BaseModel.AccountBbData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountBbData AccountAddBb(string accountNumber, string branch, string accountName, int bankId, int accountTypeId, int beneficiaryId, int creatorId, string remarks = null)
    parameters:
    - id: accountNumber
      type: System.String
      description: Required*
    - id: branch
      type: System.String
      description: Optional
    - id: accountName
      type: System.String
      description: Required*
    - id: bankId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: beneficiaryId
      type: System.Int32
      description: Required*
    - id: creatorId
      type: System.Int32
      description: Required*
    - id: remarks
      type: System.String
      description: Optional
    return:
      type: FasttraxxDG.BaseModel.AccountBbData
      description: AccountBB Details
    content.vb: Public Function AccountAddBb(accountNumber As String, branch As String, accountName As String, bankId As Integer, accountTypeId As Integer, beneficiaryId As Integer, creatorId As Integer, remarks As String = Nothing) As AccountBbData
  overload: FasttraxxDG.BaseService.AccountService.AccountAddBb*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountGetBB(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountGetBB(System.Int32)
  id: AccountGetBB(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountGetBB(Int32)
  nameWithType: AccountService.AccountGetBB(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetBB(System.Int32)
  type: Method
  source:
    id: AccountGetBB
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 137
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get account bb data and return entity model of <xref href=\"FasttraxxDG.BaseModel.AccountBbData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountBbData AccountGetBB(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountBbData
      description: AccountBB Details
    content.vb: Public Function AccountGetBB(accountId As Integer) As AccountBbData
  overload: FasttraxxDG.BaseService.AccountService.AccountGetBB*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddCcCheck(System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddCcCheck(System.Int32,System.Int32,System.String)
  id: AccountAddCcCheck(System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddCcCheck(Int32, Int32, String)
  nameWithType: AccountService.AccountAddCcCheck(Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddCcCheck(System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: AccountAddCcCheck
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 165
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if account cc already exists in beneficiary records and return boolean.\n"
  example: []
  syntax:
    content: public bool AccountAddCcCheck(int beneId, int cashcardId, string cashcardNumber)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: cashcardId
      type: System.Int32
      description: Required*
    - id: cashcardNumber
      type: System.String
      description: Required*
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AccountAddCcCheck(beneId As Integer, cashcardId As Integer, cashcardNumber As String) As Boolean
  overload: FasttraxxDG.BaseService.AccountService.AccountAddCcCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddCc(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddCc(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)
  id: AccountAddCc(System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddCc(Int32, String, Int32, Int32, Int32, String, String)
  nameWithType: AccountService.AccountAddCc(Int32, String, Int32, Int32, Int32, String, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddCc(System.Int32, System.String, System.Int32, System.Int32, System.Int32, System.String, System.String)
  type: Method
  source:
    id: AccountAddCc
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 184
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method insert cash card account data and return entity model of <xref href=\"FasttraxxDG.BaseModel.AccountCcData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountCcData AccountAddCc(int cashcardId, string cashcardNumber, int accountTypeId, int beneId, int creatorId, string cashcardName, string remarks)
    parameters:
    - id: cashcardId
      type: System.Int32
      description: Required*
    - id: cashcardNumber
      type: System.String
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: beneId
      type: System.Int32
      description: Required*
    - id: creatorId
      type: System.Int32
      description: Required*
    - id: cashcardName
      type: System.String
      description: Required*
    - id: remarks
      type: System.String
      description: Optional
    return:
      type: FasttraxxDG.BaseModel.AccountCcData
      description: ''
    content.vb: Public Function AccountAddCc(cashcardId As Integer, cashcardNumber As String, accountTypeId As Integer, beneId As Integer, creatorId As Integer, cashcardName As String, remarks As String) As AccountCcData
  overload: FasttraxxDG.BaseService.AccountService.AccountAddCc*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountGetCC(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountGetCC(System.Int32)
  id: AccountGetCC(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountGetCC(Int32)
  nameWithType: AccountService.AccountGetCC(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetCC(System.Int32)
  type: Method
  source:
    id: AccountGetCC
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 233
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get cash card account filter by acccountid and return <xref href=\"FasttraxxDG.BaseModel.AccountCcData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountCcData AccountGetCC(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountCcData
      description: ''
    content.vb: Public Function AccountGetCC(accountId As Integer) As AccountCcData
  overload: FasttraxxDG.BaseService.AccountService.AccountGetCC*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddDDCheck(System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddDDCheck(System.Int32,System.Int32,System.Int32,System.String)
  id: AccountAddDDCheck(System.Int32,System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddDDCheck(Int32, Int32, Int32, String)
  nameWithType: AccountService.AccountAddDDCheck(Int32, Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddDDCheck(System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: AccountAddDDCheck
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 262
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check if dd account already exists in bene records and return a boolean.\n"
  example: []
  syntax:
    content: public bool AccountAddDDCheck(int beneId, int accountTypeId, int doortodoorId, string address1)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: doortodoorId
      type: System.Int32
      description: Required*
    - id: address1
      type: System.String
      description: Required*
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AccountAddDDCheck(beneId As Integer, accountTypeId As Integer, doortodoorId As Integer, address1 As String) As Boolean
  overload: FasttraxxDG.BaseService.AccountService.AccountAddDDCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddDd(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddDd(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: AccountAddDd(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddDd(String, Int32, String, Int32, Int32, Int32, Int32, String)
  nameWithType: AccountService.AccountAddDd(String, Int32, String, Int32, Int32, Int32, Int32, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddDd(System.String, System.Int32, System.String, System.Int32, System.Int32, System.Int32, System.Int32, System.String)
  type: Method
  source:
    id: AccountAddDd
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 283
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis mehtod insert dd account data and return <xref href=\"FasttraxxDG.BaseModel.AccountDdData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountDdData AccountAddDd(string address1, int cityId, string zip, int accountTypeId, int dtdId, int beneId, int creatorId, string remarks)
    parameters:
    - id: address1
      type: System.String
      description: Required*
    - id: cityId
      type: System.Int32
      description: Required*
    - id: zip
      type: System.String
      description: Optional
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: dtdId
      type: System.Int32
      description: Required*
    - id: beneId
      type: System.Int32
      description: Required*
    - id: creatorId
      type: System.Int32
      description: Required*
    - id: remarks
      type: System.String
      description: Optional
    return:
      type: FasttraxxDG.BaseModel.AccountDdData
      description: ''
    content.vb: Public Function AccountAddDd(address1 As String, cityId As Integer, zip As String, accountTypeId As Integer, dtdId As Integer, beneId As Integer, creatorId As Integer, remarks As String) As AccountDdData
  overload: FasttraxxDG.BaseService.AccountService.AccountAddDd*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountGetDD(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountGetDD(System.Int32)
  id: AccountGetDD(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountGetDD(Int32)
  nameWithType: AccountService.AccountGetDD(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetDD(System.Int32)
  type: Method
  source:
    id: AccountGetDD
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 332
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get dd account filter by account id and return <xref href=\"FasttraxxDG.BaseModel.AccountDdData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountDdData AccountGetDD(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountDdData
      description: ''
    content.vb: Public Function AccountGetDD(accountId As Integer) As AccountDdData
  overload: FasttraxxDG.BaseService.AccountService.AccountGetDD*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddFsCheck(System.Int32,System.Int32,System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddFsCheck(System.Int32,System.Int32,System.Int32)
  id: AccountAddFsCheck(System.Int32,System.Int32,System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddFsCheck(Int32, Int32, Int32)
  nameWithType: AccountService.AccountAddFsCheck(Int32, Int32, Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddFsCheck(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: AccountAddFsCheck
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 360
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check FS account if already exists in bene records and return a boolean.\n"
  example: []
  syntax:
    content: public bool AccountAddFsCheck(int beneId, int accountTypeId, int foodId)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: foodId
      type: System.Int32
      description: Required*
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AccountAddFsCheck(beneId As Integer, accountTypeId As Integer, foodId As Integer) As Boolean
  overload: FasttraxxDG.BaseService.AccountService.AccountAddFsCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddFood(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddFood(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)
  id: AccountAddFood(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.DateTime,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddFood(Int32, Int32, Int32, Int32, String, String, DateTime, String)
  nameWithType: AccountService.AccountAddFood(Int32, Int32, Int32, Int32, String, String, DateTime, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddFood(System.Int32, System.Int32, System.Int32, System.Int32, System.String, System.String, System.DateTime, System.String)
  type: Method
  source:
    id: AccountAddFood
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 380
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method insert FS account and return <xref href=\"FasttraxxDG.BaseModel.AccountFsData\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AccountFsData AccountAddFood(int foodId, int accountTypeId, int beneId, int creatorId, string address, string contactNumber, DateTime deliveryDate, string remarks)
    parameters:
    - id: foodId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: beneId
      type: System.Int32
      description: Required*
    - id: creatorId
      type: System.Int32
      description: Required*
    - id: address
      type: System.String
      description: Required*
    - id: contactNumber
      type: System.String
      description: Required*
    - id: deliveryDate
      type: System.DateTime
      description: Required*
    - id: remarks
      type: System.String
      description: Optional
    return:
      type: FasttraxxDG.BaseModel.AccountFsData
      description: ''
    content.vb: Public Function AccountAddFood(foodId As Integer, accountTypeId As Integer, beneId As Integer, creatorId As Integer, address As String, contactNumber As String, deliveryDate As Date, remarks As String) As AccountFsData
  overload: FasttraxxDG.BaseService.AccountService.AccountAddFood*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountGetFS(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountGetFS(System.Int32)
  id: AccountGetFS(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountGetFS(Int32)
  nameWithType: AccountService.AccountGetFS(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetFS(System.Int32)
  type: Method
  source:
    id: AccountGetFS
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 429
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get fs a/c and return <xref href=\"FasttraxxDG.BaseModel.AccountFsData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountFsData AccountGetFS(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountFsData
      description: ''
    content.vb: Public Function AccountGetFS(accountId As Integer) As AccountFsData
  overload: FasttraxxDG.BaseService.AccountService.AccountGetFS*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck(System.Int32,System.Int32,System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck(System.Int32,System.Int32,System.Int32)
  id: AccountAddPickupCheck(System.Int32,System.Int32,System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddPickupCheck(Int32, Int32, Int32)
  nameWithType: AccountService.AccountAddPickupCheck(Int32, Int32, Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    id: AccountAddPickupCheck
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 457
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method check pickup a/c if already exists in bene records and return a boolean.\n"
  example: []
  syntax:
    content: public bool AccountAddPickupCheck(int beneId, int accountTypeId, int pickupId)
    parameters:
    - id: beneId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: pickupId
      type: System.Int32
      description: Required*
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AccountAddPickupCheck(beneId As Integer, accountTypeId As Integer, pickupId As Integer) As Boolean
  overload: FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountAddPickup(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountAddPickup(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)
  id: AccountAddPickup(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountAddPickup(Int32, Int32, Int32, Int32, String, String)
  nameWithType: AccountService.AccountAddPickup(Int32, Int32, Int32, Int32, String, String)
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddPickup(System.Int32, System.Int32, System.Int32, System.Int32, System.String, System.String)
  type: Method
  source:
    id: AccountAddPickup
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 475
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method insert pickup a/c and return <xref href=\"FasttraxxDG.BaseModel.AccountPickupData\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public AccountPickupData AccountAddPickup(int pickupId, int accountTypeId, int beneId, int creatorId, string address, string remarks)
    parameters:
    - id: pickupId
      type: System.Int32
      description: Required*
    - id: accountTypeId
      type: System.Int32
      description: Required*
    - id: beneId
      type: System.Int32
      description: Required*
    - id: creatorId
      type: System.Int32
      description: Required*
    - id: address
      type: System.String
      description: Optional
    - id: remarks
      type: System.String
      description: Optional
    return:
      type: FasttraxxDG.BaseModel.AccountPickupData
      description: ''
    content.vb: Public Function AccountAddPickup(pickupId As Integer, accountTypeId As Integer, beneId As Integer, creatorId As Integer, address As String, remarks As String) As AccountPickupData
  overload: FasttraxxDG.BaseService.AccountService.AccountAddPickup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountGetPickup(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountGetPickup(System.Int32)
  id: AccountGetPickup(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountGetPickup(Int32)
  nameWithType: AccountService.AccountGetPickup(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetPickup(System.Int32)
  type: Method
  source:
    id: AccountGetPickup
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 516
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get pickup a/c filter by account id and return <xref href=\"FasttraxxDG.BaseModel.AccountPickupData\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AccountPickupData AccountGetPickup(int accountId)
    parameters:
    - id: accountId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountPickupData
      description: ''
    content.vb: Public Function AccountGetPickup(accountId As Integer) As AccountPickupData
  overload: FasttraxxDG.BaseService.AccountService.AccountGetPickup*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet(System.Int32)
  commentId: M:FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet(System.Int32)
  id: AccountStatusAlertGet(System.Int32)
  parent: FasttraxxDG.BaseService.AccountService
  langs:
  - csharp
  - vb
  name: AccountStatusAlertGet(Int32)
  nameWithType: AccountService.AccountStatusAlertGet(Int32)
  fullName: FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet(System.Int32)
  type: Method
  source:
    id: AccountStatusAlertGet
    path: C:\Project\FasttraxxDG\FasttraxxDG-FrontEnd\Code\FasttraxxDG.BaseService\Services\AccountService.cs
    startLine: 542
  assemblies:
  - FasttraxxDG.BaseService
  namespace: FasttraxxDG.BaseService
  summary: "\nthis method get account status filter by statusid and return <xref href=\"FasttraxxDG.BaseModel.AccountStatusData\" data-throw-if-not-resolved=\"false\"></xref>\n"
  example: []
  syntax:
    content: public AccountStatusData AccountStatusAlertGet(int statusId)
    parameters:
    - id: statusId
      type: System.Int32
      description: ''
    return:
      type: FasttraxxDG.BaseModel.AccountStatusData
      description: ''
    content.vb: Public Function AccountStatusAlertGet(statusId As Integer) As AccountStatusData
  overload: FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: FasttraxxDG.BaseService
  commentId: N:FasttraxxDG.BaseService
  name: FasttraxxDG.BaseService
  nameWithType: FasttraxxDG.BaseService
  fullName: FasttraxxDG.BaseService
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  commentId: T:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  parent: FasttraxxDG.BaseService.DataAccess.Repository
  name: BaseDataAccess
  nameWithType: BaseDataAccess
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  commentId: P:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  name: ConnectionString
  nameWithType: BaseDataAccess.ConnectionString
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ConnectionString
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  name: LoadList<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadList<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadList(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)(System.String, TU)
  name.vb: LoadList(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList<T, TU>
    nameWithType: BaseDataAccess.LoadList<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList(Of T, TU)
    nameWithType: BaseDataAccess.LoadList(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  name: LoadListQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)(System.String, TU)
  name.vb: LoadListQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry<T, TU>
    nameWithType: BaseDataAccess.LoadListQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry(Of T, TU)
    nameWithType: BaseDataAccess.LoadListQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  name: GetData<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetData<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetData(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)(System.String, TU)
  name.vb: GetData(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData<T, TU>
    nameWithType: BaseDataAccess.GetData<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData(Of T, TU)
    nameWithType: BaseDataAccess.GetData(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  name: GetDataQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)(System.String, TU)
  name.vb: GetDataQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry<T, TU>
    nameWithType: BaseDataAccess.GetDataQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  name: CrudBase<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBase<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBase(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)(System.String, TU)
  name.vb: CrudBase(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase<T, TU>
    nameWithType: BaseDataAccess.CrudBase<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase(Of T, TU)
    nameWithType: BaseDataAccess.CrudBase(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  name: CrudBaseQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)(System.String, TU)
  name.vb: CrudBaseQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry<T, TU>
    nameWithType: BaseDataAccess.CrudBaseQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  name: Execute<TU>(String, TU)
  nameWithType: BaseDataAccess.Execute<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.Execute(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)(System.String, TU)
  name.vb: Execute(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute<TU>
    nameWithType: BaseDataAccess.Execute<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute(Of TU)
    nameWithType: BaseDataAccess.Execute(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  name: ExecuteQry<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteQry<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteQry(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)(System.String, TU)
  name.vb: ExecuteQry(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry<TU>
    nameWithType: BaseDataAccess.ExecuteQry<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry(Of TU)
    nameWithType: BaseDataAccess.ExecuteQry(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  name: GetDataAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)(System.String, TU)
  name.vb: GetDataAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync<T, TU>
    nameWithType: BaseDataAccess.GetDataAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync(Of T, TU)
    nameWithType: BaseDataAccess.GetDataAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  name: LoadListAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)(System.String, TU)
  name.vb: LoadListAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync<T, TU>
    nameWithType: BaseDataAccess.LoadListAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync(Of T, TU)
    nameWithType: BaseDataAccess.LoadListAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  name: CrudBaseAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)(System.String, TU)
  name.vb: CrudBaseAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync<T, TU>
    nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  name: ExecuteAsync<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteAsync<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteAsync(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)(System.String, TU)
  name.vb: ExecuteAsync(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync<TU>
    nameWithType: BaseDataAccess.ExecuteAsync<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync(Of TU)
    nameWithType: BaseDataAccess.ExecuteAsync(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  isExternal: true
  name: ExecuteReturnScalarAsync<T>(String, DynamicParameters)
  nameWithType: BaseDataAccess.ExecuteReturnScalarAsync<T>(String, DynamicParameters)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync<T>(System.String, Dapper.DynamicParameters)
  nameWithType.vb: BaseDataAccess.ExecuteReturnScalarAsync(Of T)(String, DynamicParameters)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync(Of T)(System.String, Dapper.DynamicParameters)
  name.vb: ExecuteReturnScalarAsync(Of T)(String, DynamicParameters)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
    name: ExecuteReturnScalarAsync<T>
    nameWithType: BaseDataAccess.ExecuteReturnScalarAsync<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dapper.DynamicParameters
    name: DynamicParameters
    nameWithType: DynamicParameters
    fullName: Dapper.DynamicParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync``1(System.String,Dapper.DynamicParameters)
    name: ExecuteReturnScalarAsync(Of T)
    nameWithType: BaseDataAccess.ExecuteReturnScalarAsync(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteReturnScalarAsync(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Dapper.DynamicParameters
    name: DynamicParameters
    nameWithType: DynamicParameters
    fullName: Dapper.DynamicParameters
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  name: GetDataType<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataType<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataType(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)(System.String, TU)
  name.vb: GetDataType(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType<T, TU>
    nameWithType: BaseDataAccess.GetDataType<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType(Of T, TU)
    nameWithType: BaseDataAccess.GetDataType(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  name: GetDataTypeQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataTypeQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)(System.String, TU)
  name.vb: GetDataTypeQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry<T, TU>
    nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataTypeQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,{TU})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  name: ExecuteUdt<T, TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteUdt<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteUdt(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)(System.String, TU)
  name.vb: ExecuteUdt(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt<T, TU>
    nameWithType: BaseDataAccess.ExecuteUdt<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt(Of T, TU)
    nameWithType: BaseDataAccess.ExecuteUdt(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{{T}})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  definition: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  name: ToDataTable<T>(List<T>)
  nameWithType: BaseDataAccess.ToDataTable<T>(List<T>)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: BaseDataAccess.ToDataTable(Of T)(List(Of T))
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)(System.Collections.Generic.List(Of T))
  name.vb: ToDataTable(Of T)(List(Of T))
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable<T>
    nameWithType: BaseDataAccess.ToDataTable<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable(Of T)
    nameWithType: BaseDataAccess.ToDataTable(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  parent: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess
  name: TestConnection()
  nameWithType: BaseDataAccess.TestConnection()
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection()
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
    name: TestConnection
    nameWithType: BaseDataAccess.TestConnection
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
    name: TestConnection
    nameWithType: BaseDataAccess.TestConnection
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.TestConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.AccountService.FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
  commentId: M:FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  parent: FasttraxxDG.BaseLogic.MapperHelper
  definition: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  name: MapTo<AccountService, TDest>()
  nameWithType: MapperHelper.MapTo<AccountService, TDest>()
  fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<FasttraxxDG.BaseService.AccountService, TDest>()
  nameWithType.vb: MapperHelper.MapTo(Of AccountService, TDest)()
  fullName.vb: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of FasttraxxDG.BaseService.AccountService, TDest)()
  name.vb: MapTo(Of AccountService, TDest)()
  spec.csharp:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
    name: MapTo<AccountService, TDest>
    nameWithType: MapperHelper.MapTo<AccountService, TDest>
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<FasttraxxDG.BaseService.AccountService, TDest>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2
    name: MapTo(Of AccountService, TDest)
    nameWithType: MapperHelper.MapTo(Of AccountService, TDest)
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of FasttraxxDG.BaseService.AccountService, TDest)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  parent: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  definition: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  name: RightDrawerShow()
  nameWithType: AppSettings.RightDrawerShow()
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow()
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  parent: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  definition: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  name: LeftDrawerShow()
  nameWithType: AppSettings.LeftDrawerShow()
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow()
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: FasttraxxDG.BaseService.DataAccess.Repository
  commentId: N:FasttraxxDG.BaseService.DataAccess.Repository
  name: FasttraxxDG.BaseService.DataAccess.Repository
  nameWithType: FasttraxxDG.BaseService.DataAccess.Repository
  fullName: FasttraxxDG.BaseService.DataAccess.Repository
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
  isExternal: true
  name: LoadList<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadList<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadList(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)(System.String, TU)
  name.vb: LoadList(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList<T, TU>
    nameWithType: BaseDataAccess.LoadList<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList``2(System.String,``1)
    name: LoadList(Of T, TU)
    nameWithType: BaseDataAccess.LoadList(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadList(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
  isExternal: true
  name: LoadListQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)(System.String, TU)
  name.vb: LoadListQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry<T, TU>
    nameWithType: BaseDataAccess.LoadListQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry``2(System.String,``1)
    name: LoadListQry(Of T, TU)
    nameWithType: BaseDataAccess.LoadListQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
  isExternal: true
  name: GetData<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetData<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetData(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)(System.String, TU)
  name.vb: GetData(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData<T, TU>
    nameWithType: BaseDataAccess.GetData<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData``2(System.String,``1)
    name: GetData(Of T, TU)
    nameWithType: BaseDataAccess.GetData(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetData(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
  isExternal: true
  name: GetDataQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)(System.String, TU)
  name.vb: GetDataQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry<T, TU>
    nameWithType: BaseDataAccess.GetDataQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry``2(System.String,``1)
    name: GetDataQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
  isExternal: true
  name: CrudBase<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBase<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBase(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)(System.String, TU)
  name.vb: CrudBase(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase<T, TU>
    nameWithType: BaseDataAccess.CrudBase<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase``2(System.String,``1)
    name: CrudBase(Of T, TU)
    nameWithType: BaseDataAccess.CrudBase(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBase(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
  isExternal: true
  name: CrudBaseQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)(System.String, TU)
  name.vb: CrudBaseQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry<T, TU>
    nameWithType: BaseDataAccess.CrudBaseQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry``2(System.String,``1)
    name: CrudBaseQry(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
  isExternal: true
  name: Execute<TU>(String, TU)
  nameWithType: BaseDataAccess.Execute<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.Execute(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)(System.String, TU)
  name.vb: Execute(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute<TU>
    nameWithType: BaseDataAccess.Execute<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute``1(System.String,``0)
    name: Execute(Of TU)
    nameWithType: BaseDataAccess.Execute(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.Execute(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
  isExternal: true
  name: ExecuteQry<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteQry<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteQry(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)(System.String, TU)
  name.vb: ExecuteQry(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry<TU>
    nameWithType: BaseDataAccess.ExecuteQry<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry``1(System.String,``0)
    name: ExecuteQry(Of TU)
    nameWithType: BaseDataAccess.ExecuteQry(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteQry(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
  isExternal: true
  name: GetDataAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)(System.String, TU)
  name.vb: GetDataAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync<T, TU>
    nameWithType: BaseDataAccess.GetDataAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync``2(System.String,``1)
    name: GetDataAsync(Of T, TU)
    nameWithType: BaseDataAccess.GetDataAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
  isExternal: true
  name: LoadListAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.LoadListAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.LoadListAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)(System.String, TU)
  name.vb: LoadListAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync<T, TU>
    nameWithType: BaseDataAccess.LoadListAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync``2(System.String,``1)
    name: LoadListAsync(Of T, TU)
    nameWithType: BaseDataAccess.LoadListAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.LoadListAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
  isExternal: true
  name: CrudBaseAsync<T, TU>(String, TU)
  nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.CrudBaseAsync(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)(System.String, TU)
  name.vb: CrudBaseAsync(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync<T, TU>
    nameWithType: BaseDataAccess.CrudBaseAsync<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync``2(System.String,``1)
    name: CrudBaseAsync(Of T, TU)
    nameWithType: BaseDataAccess.CrudBaseAsync(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.CrudBaseAsync(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
  isExternal: true
  name: ExecuteAsync<TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteAsync<TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteAsync(Of TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)(System.String, TU)
  name.vb: ExecuteAsync(Of TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync<TU>
    nameWithType: BaseDataAccess.ExecuteAsync<TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync<TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync``1(System.String,``0)
    name: ExecuteAsync(Of TU)
    nameWithType: BaseDataAccess.ExecuteAsync(Of TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteAsync(Of TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
  isExternal: true
  name: GetDataType<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataType<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataType(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)(System.String, TU)
  name.vb: GetDataType(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType<T, TU>
    nameWithType: BaseDataAccess.GetDataType<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType``2(System.String,``1)
    name: GetDataType(Of T, TU)
    nameWithType: BaseDataAccess.GetDataType(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataType(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
  isExternal: true
  name: GetDataTypeQry<T, TU>(String, TU)
  nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.GetDataTypeQry(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)(System.String, TU)
  name.vb: GetDataTypeQry(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry<T, TU>
    nameWithType: BaseDataAccess.GetDataTypeQry<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry``2(System.String,``1)
    name: GetDataTypeQry(Of T, TU)
    nameWithType: BaseDataAccess.GetDataTypeQry(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.GetDataTypeQry(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
  isExternal: true
  name: ExecuteUdt<T, TU>(String, TU)
  nameWithType: BaseDataAccess.ExecuteUdt<T, TU>(String, TU)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>(System.String, TU)
  nameWithType.vb: BaseDataAccess.ExecuteUdt(Of T, TU)(String, TU)
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)(System.String, TU)
  name.vb: ExecuteUdt(Of T, TU)(String, TU)
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt<T, TU>
    nameWithType: BaseDataAccess.ExecuteUdt<T, TU>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt<T, TU>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt``2(System.String,``1)
    name: ExecuteUdt(Of T, TU)
    nameWithType: BaseDataAccess.ExecuteUdt(Of T, TU)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ExecuteUdt(Of T, TU)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TU
    nameWithType: TU
    fullName: TU
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  commentId: M:FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
  isExternal: true
  name: ToDataTable<T>(List<T>)
  nameWithType: BaseDataAccess.ToDataTable<T>(List<T>)
  fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>(System.Collections.Generic.List<T>)
  nameWithType.vb: BaseDataAccess.ToDataTable(Of T)(List(Of T))
  fullName.vb: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)(System.Collections.Generic.List(Of T))
  name.vb: ToDataTable(Of T)(List(Of T))
  spec.csharp:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable<T>
    nameWithType: BaseDataAccess.ToDataTable<T>
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable``1(System.Collections.Generic.List{``0})
    name: ToDataTable(Of T)
    nameWithType: BaseDataAccess.ToDataTable(Of T)
    fullName: FasttraxxDG.BaseService.DataAccess.Repository.BaseDataAccess.ToDataTable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  commentId: M:FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
  name: MapTo<TSource, TDest>(TSource)
  nameWithType: MapperHelper.MapTo<TSource, TDest>(TSource)
  fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<TSource, TDest>(TSource)
  nameWithType.vb: MapperHelper.MapTo(Of TSource, TDest)(TSource)
  fullName.vb: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of TSource, TDest)(TSource)
  name.vb: MapTo(Of TSource, TDest)(TSource)
  spec.csharp:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
    name: MapTo<TSource, TDest>
    nameWithType: MapperHelper.MapTo<TSource, TDest>
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo<TSource, TDest>
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.BaseLogic.MapperHelper.MapTo``2(``0)
    name: MapTo(Of TSource, TDest)
    nameWithType: MapperHelper.MapTo(Of TSource, TDest)
    fullName: FasttraxxDG.BaseLogic.MapperHelper.MapTo(Of TSource, TDest)
  - name: (
    nameWithType: (
    fullName: (
  - name: TSource
    nameWithType: TSource
    fullName: TSource
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic.MapperHelper
  commentId: T:FasttraxxDG.BaseLogic.MapperHelper
  parent: FasttraxxDG.BaseLogic
  name: MapperHelper
  nameWithType: MapperHelper
  fullName: FasttraxxDG.BaseLogic.MapperHelper
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  isExternal: true
  name: RightDrawerShow(Object)
  nameWithType: AppSettings.RightDrawerShow(Object)
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow(System.Object)
    name: RightDrawerShow
    nameWithType: AppSettings.RightDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.RightDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings
  commentId: T:FasttraxxDG.FrontEndUI.Helpers.AppSettings
  parent: FasttraxxDG.FrontEndUI.Helpers
  name: AppSettings
  nameWithType: AppSettings
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings
- uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  commentId: M:FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  isExternal: true
  name: LeftDrawerShow(Object)
  nameWithType: AppSettings.LeftDrawerShow(Object)
  fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
  spec.csharp:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow(System.Object)
    name: LeftDrawerShow
    nameWithType: AppSettings.LeftDrawerShow
    fullName: FasttraxxDG.FrontEndUI.Helpers.AppSettings.LeftDrawerShow
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseLogic
  commentId: N:FasttraxxDG.BaseLogic
  name: FasttraxxDG.BaseLogic
  nameWithType: FasttraxxDG.BaseLogic
  fullName: FasttraxxDG.BaseLogic
- uid: FasttraxxDG.FrontEndUI.Helpers
  commentId: N:FasttraxxDG.FrontEndUI.Helpers
  name: FasttraxxDG.FrontEndUI.Helpers
  nameWithType: FasttraxxDG.FrontEndUI.Helpers
  fullName: FasttraxxDG.FrontEndUI.Helpers
- uid: FasttraxxDG.BaseService.AccountService.#ctor*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.#ctor
  name: AccountService
  nameWithType: AccountService.AccountService
  fullName: FasttraxxDG.BaseService.AccountService.AccountService
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FasttraxxDG.BaseModel.AccountSelect
  commentId: T:FasttraxxDG.BaseModel.AccountSelect
  parent: FasttraxxDG.BaseModel
  name: AccountSelect
  nameWithType: AccountSelect
  fullName: FasttraxxDG.BaseModel.AccountSelect
- uid: FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList
  name: BeneficiaryAccountList
  nameWithType: AccountService.BeneficiaryAccountList
  fullName: FasttraxxDG.BaseService.AccountService.BeneficiaryAccountList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{FasttraxxDG.BaseModel.AccountSelect}
  commentId: T:System.Collections.Generic.List{FasttraxxDG.BaseModel.AccountSelect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AccountSelect>
  nameWithType: List<AccountSelect>
  fullName: System.Collections.Generic.List<FasttraxxDG.BaseModel.AccountSelect>
  nameWithType.vb: List(Of AccountSelect)
  fullName.vb: System.Collections.Generic.List(Of FasttraxxDG.BaseModel.AccountSelect)
  name.vb: List(Of AccountSelect)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FasttraxxDG.BaseModel.AccountSelect
    name: AccountSelect
    nameWithType: AccountSelect
    fullName: FasttraxxDG.BaseModel.AccountSelect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FasttraxxDG.BaseModel.AccountSelect
    name: AccountSelect
    nameWithType: AccountSelect
    fullName: FasttraxxDG.BaseModel.AccountSelect
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseModel
  commentId: N:FasttraxxDG.BaseModel
  name: FasttraxxDG.BaseModel
  nameWithType: FasttraxxDG.BaseModel
  fullName: FasttraxxDG.BaseModel
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: FasttraxxDG.BaseService.AccountService.AccountTypeList*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountTypeList
  name: AccountTypeList
  nameWithType: AccountService.AccountTypeList
  fullName: FasttraxxDG.BaseService.AccountService.AccountTypeList
- uid: FasttraxxDG.BaseModel.ServiceData
  commentId: T:FasttraxxDG.BaseModel.ServiceData
  parent: FasttraxxDG.BaseModel
  name: ServiceData
  nameWithType: ServiceData
  fullName: FasttraxxDG.BaseModel.ServiceData
- uid: FasttraxxDG.BaseService.AccountService.ServiceList*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.ServiceList
  name: ServiceList
  nameWithType: AccountService.ServiceList
  fullName: FasttraxxDG.BaseService.AccountService.ServiceList
- uid: System.Collections.Generic.List{FasttraxxDG.BaseModel.ServiceData}
  commentId: T:System.Collections.Generic.List{FasttraxxDG.BaseModel.ServiceData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ServiceData>
  nameWithType: List<ServiceData>
  fullName: System.Collections.Generic.List<FasttraxxDG.BaseModel.ServiceData>
  nameWithType.vb: List(Of ServiceData)
  fullName.vb: System.Collections.Generic.List(Of FasttraxxDG.BaseModel.ServiceData)
  name.vb: List(Of ServiceData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FasttraxxDG.BaseModel.ServiceData
    name: ServiceData
    nameWithType: ServiceData
    fullName: FasttraxxDG.BaseModel.ServiceData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FasttraxxDG.BaseModel.ServiceData
    name: ServiceData
    nameWithType: ServiceData
    fullName: FasttraxxDG.BaseModel.ServiceData
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseModel.Restaurant
  commentId: T:FasttraxxDG.BaseModel.Restaurant
  parent: FasttraxxDG.BaseModel
  name: Restaurant
  nameWithType: Restaurant
  fullName: FasttraxxDG.BaseModel.Restaurant
- uid: FasttraxxDG.BaseService.AccountService.RestaurantList*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.RestaurantList
  name: RestaurantList
  nameWithType: AccountService.RestaurantList
  fullName: FasttraxxDG.BaseService.AccountService.RestaurantList
- uid: System.Collections.Generic.List{FasttraxxDG.BaseModel.Restaurant}
  commentId: T:System.Collections.Generic.List{FasttraxxDG.BaseModel.Restaurant}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Restaurant>
  nameWithType: List<Restaurant>
  fullName: System.Collections.Generic.List<FasttraxxDG.BaseModel.Restaurant>
  nameWithType.vb: List(Of Restaurant)
  fullName.vb: System.Collections.Generic.List(Of FasttraxxDG.BaseModel.Restaurant)
  name.vb: List(Of Restaurant)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FasttraxxDG.BaseModel.Restaurant
    name: Restaurant
    nameWithType: Restaurant
    fullName: FasttraxxDG.BaseModel.Restaurant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FasttraxxDG.BaseModel.Restaurant
    name: Restaurant
    nameWithType: Restaurant
    fullName: FasttraxxDG.BaseModel.Restaurant
  - name: )
    nameWithType: )
    fullName: )
- uid: FasttraxxDG.BaseService.AccountService.AccountAddBBCheck*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddBBCheck
  name: AccountAddBBCheck
  nameWithType: AccountService.AccountAddBBCheck
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddBBCheck
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: FasttraxxDG.BaseModel.AccountBbData
  commentId: T:FasttraxxDG.BaseModel.AccountBbData
  parent: FasttraxxDG.BaseModel
  name: AccountBbData
  nameWithType: AccountBbData
  fullName: FasttraxxDG.BaseModel.AccountBbData
- uid: FasttraxxDG.BaseService.AccountService.AccountAddBb*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddBb
  name: AccountAddBb
  nameWithType: AccountService.AccountAddBb
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddBb
- uid: FasttraxxDG.BaseService.AccountService.AccountGetBB*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountGetBB
  name: AccountGetBB
  nameWithType: AccountService.AccountGetBB
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetBB
- uid: FasttraxxDG.BaseService.AccountService.AccountAddCcCheck*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddCcCheck
  name: AccountAddCcCheck
  nameWithType: AccountService.AccountAddCcCheck
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddCcCheck
- uid: FasttraxxDG.BaseModel.AccountCcData
  commentId: T:FasttraxxDG.BaseModel.AccountCcData
  parent: FasttraxxDG.BaseModel
  name: AccountCcData
  nameWithType: AccountCcData
  fullName: FasttraxxDG.BaseModel.AccountCcData
- uid: FasttraxxDG.BaseService.AccountService.AccountAddCc*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddCc
  name: AccountAddCc
  nameWithType: AccountService.AccountAddCc
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddCc
- uid: FasttraxxDG.BaseService.AccountService.AccountGetCC*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountGetCC
  name: AccountGetCC
  nameWithType: AccountService.AccountGetCC
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetCC
- uid: FasttraxxDG.BaseService.AccountService.AccountAddDDCheck*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddDDCheck
  name: AccountAddDDCheck
  nameWithType: AccountService.AccountAddDDCheck
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddDDCheck
- uid: FasttraxxDG.BaseModel.AccountDdData
  commentId: T:FasttraxxDG.BaseModel.AccountDdData
  parent: FasttraxxDG.BaseModel
  name: AccountDdData
  nameWithType: AccountDdData
  fullName: FasttraxxDG.BaseModel.AccountDdData
- uid: FasttraxxDG.BaseService.AccountService.AccountAddDd*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddDd
  name: AccountAddDd
  nameWithType: AccountService.AccountAddDd
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddDd
- uid: FasttraxxDG.BaseService.AccountService.AccountGetDD*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountGetDD
  name: AccountGetDD
  nameWithType: AccountService.AccountGetDD
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetDD
- uid: FasttraxxDG.BaseService.AccountService.AccountAddFsCheck*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddFsCheck
  name: AccountAddFsCheck
  nameWithType: AccountService.AccountAddFsCheck
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddFsCheck
- uid: FasttraxxDG.BaseModel.AccountFsData
  commentId: T:FasttraxxDG.BaseModel.AccountFsData
  parent: FasttraxxDG.BaseModel
  name: AccountFsData
  nameWithType: AccountFsData
  fullName: FasttraxxDG.BaseModel.AccountFsData
- uid: FasttraxxDG.BaseService.AccountService.AccountAddFood*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddFood
  name: AccountAddFood
  nameWithType: AccountService.AccountAddFood
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddFood
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: FasttraxxDG.BaseService.AccountService.AccountGetFS*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountGetFS
  name: AccountGetFS
  nameWithType: AccountService.AccountGetFS
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetFS
- uid: FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck
  name: AccountAddPickupCheck
  nameWithType: AccountService.AccountAddPickupCheck
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddPickupCheck
- uid: FasttraxxDG.BaseModel.AccountPickupData
  commentId: T:FasttraxxDG.BaseModel.AccountPickupData
  parent: FasttraxxDG.BaseModel
  name: AccountPickupData
  nameWithType: AccountPickupData
  fullName: FasttraxxDG.BaseModel.AccountPickupData
- uid: FasttraxxDG.BaseService.AccountService.AccountAddPickup*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountAddPickup
  name: AccountAddPickup
  nameWithType: AccountService.AccountAddPickup
  fullName: FasttraxxDG.BaseService.AccountService.AccountAddPickup
- uid: FasttraxxDG.BaseService.AccountService.AccountGetPickup*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountGetPickup
  name: AccountGetPickup
  nameWithType: AccountService.AccountGetPickup
  fullName: FasttraxxDG.BaseService.AccountService.AccountGetPickup
- uid: FasttraxxDG.BaseModel.AccountStatusData
  commentId: T:FasttraxxDG.BaseModel.AccountStatusData
  parent: FasttraxxDG.BaseModel
  name: AccountStatusData
  nameWithType: AccountStatusData
  fullName: FasttraxxDG.BaseModel.AccountStatusData
- uid: FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet*
  commentId: Overload:FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet
  name: AccountStatusAlertGet
  nameWithType: AccountService.AccountStatusAlertGet
  fullName: FasttraxxDG.BaseService.AccountService.AccountStatusAlertGet
